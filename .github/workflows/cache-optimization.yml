name: Cache Optimization

on:
  workflow_call:
    inputs:
      cache-version:
        required: false
        type: string
        default: 'v1'
      node-version:
        required: false
        type: string
        default: '20'

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_REMOTE_ONLY: true

jobs:
  cache-setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Generate cache key
        id: cache-key
        run: |
          echo "key=${{ inputs.cache-version }}-${{ runner.os }}-${{ hashFiles('**/bun.lockb', '**/package.json', 'turbo.json') }}" >> $GITHUB_OUTPUT

      - name: Cache Turborepo
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            node_modules/.cache/turbo
            apps/*/node_modules/.cache/turbo
            packages/*/node_modules/.cache/turbo
            ~/.cache/turbo
          key: turbo-${{ steps.cache-key.outputs.key }}
          restore-keys: |
            turbo-${{ inputs.cache-version }}-${{ runner.os }}-
            turbo-${{ inputs.cache-version }}-

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            apps/*/node_modules
            packages/*/node_modules
          key: bun-${{ steps.cache-key.outputs.key }}
          restore-keys: |
            bun-${{ inputs.cache-version }}-${{ runner.os }}-
            bun-${{ inputs.cache-version }}-

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            apps/frontend/.next/cache
            apps/frontend/.next/static
            apps/frontend/.next/standalone
          key: nextjs-${{ steps.cache-key.outputs.key }}-${{ hashFiles('apps/frontend/**/*.{js,jsx,ts,tsx,json}') }}
          restore-keys: |
            nextjs-${{ inputs.cache-version }}-${{ runner.os }}-
            nextjs-${{ inputs.cache-version }}-

      - name: Cache TypeScript build info
        uses: actions/cache@v4
        with:
          path: |
            apps/*/tsconfig.tsbuildinfo
            packages/*/tsconfig.tsbuildinfo
            tsconfig.tsbuildinfo
          key: typescript-${{ steps.cache-key.outputs.key }}
          restore-keys: |
            typescript-${{ inputs.cache-version }}-${{ runner.os }}-
            typescript-${{ inputs.cache-version }}-

      - name: Cache ESLint
        uses: actions/cache@v4
        with:
          path: |
            .eslintcache
            apps/*/.eslintcache
            packages/*/.eslintcache
          key: eslint-${{ steps.cache-key.outputs.key }}
          restore-keys: |
            eslint-${{ inputs.cache-version }}-${{ runner.os }}-
            eslint-${{ inputs.cache-version }}-

  cache-warmup:
    runs-on: ubuntu-latest
    needs: cache-setup
    if: needs.cache-setup.outputs.cache-hit != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Warm up Turborepo cache
        run: |
          echo "Warming up Turborepo cache..."
          bun run type-check --dry-run
          bun run lint --dry-run
          echo "Cache warmup completed"

  cache-stats:
    runs-on: ubuntu-latest
    needs: [cache-setup, cache-warmup]
    if: always()
    steps:
      - name: Cache statistics
        run: |
          echo "## Cache Statistics" >> $GITHUB_STEP_SUMMARY
          echo "- Cache Key: ${{ needs.cache-setup.outputs.cache-key }}" >> $GITHUB_STEP_SUMMARY
          echo "- Cache Hit: ${{ needs.cache-setup.outputs.cache-hit }}" >> $GITHUB_STEP_SUMMARY
          echo "- Cache Version: ${{ inputs.cache-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- Runner OS: ${{ runner.os }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.cache-setup.outputs.cache-hit }}" = "true" ]; then
            echo "✅ Cache was restored successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Cache miss - new cache will be created" >> $GITHUB_STEP_SUMMARY
          fi
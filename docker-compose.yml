version: '3.8'

services:
  # Frontend Next.js
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - CONVEX_URL=${CONVEX_URL}
      - CONVEX_DEPLOYMENT=${CONVEX_DEPLOYMENT}
    depends_on:
      - backend
    networks:
      - aidaeon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Convex
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - CONVEX_URL=${CONVEX_URL}
      - CONVEX_DEPLOYMENT=${CONVEX_DEPLOYMENT}
      - CONVEX_DEPLOY_KEY=${CONVEX_DEPLOY_KEY}
    networks:
      - aidaeon-network
    restart: unless-stopped
    volumes:
      - convex-data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # N8n para automação
  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD}
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://n8n:5678/
      - GENERIC_TIMEZONE=America/Sao_Paulo
    volumes:
      - n8n-data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
    networks:
      - aidaeon-network
    restart: unless-stopped
    depends_on:
      - postgres

  # PostgreSQL para N8n
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - aidaeon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-n8n} -d ${POSTGRES_DB:-n8n}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - aidaeon-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx como reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx-logs:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - n8n
    networks:
      - aidaeon-network
    restart: unless-stopped

  # Uptime Kuma para monitoramento
  uptime-kuma:
    image: louislam/uptime-kuma:1
    ports:
      - "3001:3001"
    volumes:
      - uptime-kuma-data:/app/data
    networks:
      - aidaeon-network
    restart: unless-stopped

volumes:
  convex-data:
  n8n-data:
  postgres-data:
  redis-data:
  nginx-logs:
  uptime-kuma-data:

networks:
  aidaeon-network:
    driver: bridge